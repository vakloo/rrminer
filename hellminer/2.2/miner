#!/usr/bin/env bash
. colors
ONLY_AMD=0
ONLY_NVIDIA=0
SWITCH_GIVER=0
VERBOSE=0
logsDir="/tmp/rrminer"
echo "
Miner arguments:                          

$@"

while [ -n "$1" ]; do
	option=$1
	
	if [[ $option == '-u' ]]; then
		shift
		wallet=$1
	elif [[ $option == '-o' ]]; then
		shift
		giver=$1
	elif [[ $option == '-v' ]]; then
		VERBOSE=1
	elif [[ $option == '--amd' ]]; then
		echo "Option: only AMD"
		ONLY_AMD=1
	elif [[ $option == '--nvidia' ]]; then
		echo "Option: only Nvidia"
		ONLY_NVIDIA=1
	elif [[ $option == '--switch' ]]; then
		echo "Option: switch giver automatically"
		SWITCH_GIVER=1
	fi

	shift
done
SWITCH_GIVER=1
switchTo=1
VERBOSE=1
wallet="WALLET"
giver="Ef-P_TOdwcCh0AXHhBpICDMxStxHenWdLCDLNH5QcNpwMMn2"
SLEEP=30
sleep 1

absFilename=`readlink -e "$0"`
mainDir=`dirname "$absFilename"`
[[ `lsb_release -d --short | grep -c '20.04'` -gt 0 ]] && dir="$mainDir/20.04" || dir="$mainDir/18.04"

echo "Wallet $wallet"
echo "Giver $giver"
list=`cat /run/hive/gpu-detect.json`
gpuCount=`echo $list | jq 'length'`
[[ $gpuCount -eq 0 ]] && echo -e "${RED}No available GPU${WHITE}" && exit 1

echo -e "${BROWN}> rrminer starting${WHITE} (total $gpuCount GPUS)"

rm -rf $logsDir
mkdir $logsDir

firstTimeTrigger=1
firstGpu=`echo $list | jq ".[0]"`
firstGpuBrand=`echo $firstGpu | jq -r ".brand"`
if [[ $firstGpuBrand == "cpu" ]]; then
	firstGpu=`echo $list | jq ".[1]"`
	firstGpuBrand=`echo $firstGpu | jq -r ".brand"`
	if [[ $firstGpuBrand == "nvidia" ]]; then
		amdPlatform=" 1"
	else
		nvidiaPlatform=" 1"
	fi
else
	if [[ $firstGpuBrand == "nvidia" ]]; then
		amdPlatform=" 1"
	else
		nvidiaPlatform=" 1"
	fi
fi

while true; do
	if [[ $SWITCH_GIVER -eq 1 && iteration -eq 0 ]]; then
		unsortedGiverObj=`curl -s https://ton.org/miningdt/ | jq '.hashrates'`
		giverObj=`echo $unsortedGiverObj | jq 'to_entries | sort_by(.value)'`

		newGiver=`echo $giverObj | jq -r .[$switchTo].key`
		hr=`echo $giverObj | jq -r .[$switchTo].value`
		if [[ $newGiver && $hr ]]; then
			echo -en "${BROWN}Giver #$switchTo: $newGiver ($hr)${WHITE}"
			if [[ $newGiver != $giver ]]; then
				echo -e " ${GREEN}-> switching${WHITE}"
				giver=$newGiver 
				giverTrigger=1
			else
				echo -e " ${GREEN}[OK]${WHITE}"
			fi
		
			iteration=30
		fi
	fi

	nvidiaCount=0
	amdCount=0
	gpuId=0
	for ((i=0; i < $gpuCount; i++)); do
		gpu=`echo $list | jq ".[$i]"`
		brand=`echo $gpu | jq -r ".brand"`
		[[ $brand == 'cpu' ]] && continue #&& echo "> CPU, ignoring" 
		bus=`echo $gpu | jq -r ".busid"`
		b=`echo $bus | awk -F ':' '{print $1}'`
		if [[ $brand == "nvidia" && $ONLY_AMD -eq 1 ]]; then
			:
		elif [[ $brand == "amd" && $ONLY_NVIDIA -eq 1 ]]; then
			:
		else
			log="$logsDir/rrminer.$b.log"
			if [[ -f $log ]]; then
				lastUpdate=`stat -c %Y $log`
				buffer=`tail -c $(( 10 * 1024 * 1024 )) $log`
				echo -e "$buffer" > $log
			else
				lastUpdate=0
			fi
			now=`date +%s`
			refresh=$(($now - $lastUpdate))
			if [[ $refresh -gt 20 || $firstTimeTrigger -eq 1 || $giverTrigger -eq 1 ]]; then
				if [[ $brand == "nvidia" && $ONLY_AMD -ne 1 ]]; then
					if [[ $firstTimeTrigger -eq 1 ]]; then
						echo -e "${GREEN}[`date +"%d.%m %T"`] > GPU $i: Start miner for Nvidia${WHITE}"
					else
						echo -e "${RED}[`date +"%d.%m %T"`] > GPU $i: Miner is idle, restart miner for Nvidia${WHITE}"
						pid=`lsof -t $log`
						[[ ! -z $pid ]] && kill -9 "$pid"
						sleep 0.2
					fi
					[[ $VERBOSE -eq 1 ]] && echo "$dir/tonlib-cuda-cli -c global.config.json -e \"pminer start $giver $wallet ${nvidiaCount}${nvidiaPlatform}\" -l $log &"
					$dir/tonlib-cuda-cli -c global.config.json -e "pminer start $giver $wallet ${nvidiaCount}${nvidiaPlatform}" -l $log &
					
				elif [[ $ONLY_NVIDIA -ne 1 ]]; then
					if [[ $firstTimeTrigger -eq 1 ]]; then
						echo -e "${GREEN}[`date +"%d.%m %T"`] > GPU $i: Start miner for AMD${WHITE}"
					else
						echo -e "${RED}[`date +"%d.%m %T"`] > GPU $i: Miner is idle, restart miner for AMD${WHITE}"
						pid=`lsof -t $log`
						[[ ! -z $pid ]] && kill -9 "$pid"
						sleep 0.2
					fi
					[[ $VERBOSE -eq 1 ]] && echo "$dir/tonlib-opencl-cli -c global.config.json -e \"pminer start $giver $wallet ${amdCount}${amdPlatform}\" -l $log &"
					$dir/tonlib-opencl-cli -c global.config.json -e "pminer start $giver $wallet ${amdCount}${amdPlatform}" -l $log &
					
				fi
			else
				echo -e "${CYAN}[`date +"%d.%m %T"`] > GPU $i: Miner is active${WHITE}"
			fi
			if [[ $brand == "nvidia" ]]; then
				((nvidiaCount++))
			else
				((amdCount++))
			fi
		fi
		((gpuId))
	done
	firstTimeTrigger=0
	giverTrigger=0
	((iteration--))
	sleep $SLEEP
done
